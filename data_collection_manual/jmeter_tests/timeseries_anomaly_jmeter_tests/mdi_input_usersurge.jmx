<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="mdi_input">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-2113284209">
            <stringProp name="1598">20</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="552631226">
            <stringProp name="1598">20</stringProp>
            <stringProp name="51508">400</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-1793996452">
            <stringProp name="1598">20</stringProp>
            <stringProp name="52469">500</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <stringProp name="HTTPSampler.domain">10.100.237.202</stringProp>
          <stringProp name="HTTPSampler.port">8081</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/impute_missing_data</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&quot;in_avg_response_time&quot;:null,&quot;in_throughput&quot;:46.0763822915,&quot;in_progress_requests&quot;:6.4677755114,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:null,&quot;memory&quot;:405.63671875,&quot;cpuPercentage&quot;:5.0275038235,&quot;memoryPercentage&quot;:null},{&quot;in_avg_response_time&quot;:150.777016704,&quot;in_throughput&quot;:44.9406175772,&quot;in_progress_requests&quot;:6.7760122471,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:393.150799,&quot;memory&quot;:405.63671875,&quot;cpuPercentage&quot;:5.0275038235,&quot;memoryPercentage&quot;:1.4605132042},{&quot;in_avg_response_time&quot;:143.5907222262,&quot;in_throughput&quot;:44.9406175772,&quot;in_progress_requests&quot;:6.4530557352,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:393.150799,&quot;memory&quot;:405.63671875,&quot;cpuPercentage&quot;:5.0275038235,&quot;memoryPercentage&quot;:1.4605132042},{&quot;in_avg_response_time&quot;:139.4381990526,&quot;in_throughput&quot;:43.3007311746,&quot;in_progress_requests&quot;:6.0377759727,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:393.150799,&quot;memory&quot;:405.63671875,&quot;cpuPercentage&quot;:5.0275038235,&quot;memoryPercentage&quot;:1.4605132042},{&quot;in_avg_response_time&quot;:142.2787660789,&quot;in_throughput&quot;:44.2870632672,&quot;in_progress_requests&quot;:6.3011087149,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:353.584885,&quot;memory&quot;:428.88671875,&quot;cpuPercentage&quot;:4.521545844,&quot;memoryPercentage&quot;:1.5442258723},{&quot;in_avg_response_time&quot;:183.300679294,&quot;in_throughput&quot;:44.1664297223,&quot;in_progress_requests&quot;:8.0957365701,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:2,&quot;cpu&quot;:353.584885,&quot;memory&quot;:428.88671875,&quot;cpuPercentage&quot;:4.521545844,&quot;memoryPercentage&quot;:1.5442258723},{&quot;in_avg_response_time&quot;:138.6366233966,&quot;in_throughput&quot;:44.5775116434,&quot;in_progress_requests&quot;:6.1800756937,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:353.584885,&quot;memory&quot;:428.88671875,&quot;cpuPercentage&quot;:4.521545844,&quot;memoryPercentage&quot;:1.5442258723},{&quot;in_avg_response_time&quot;:138.8163492303,&quot;in_throughput&quot;:46.9639468691,&quot;in_progress_requests&quot;:6.5193636498,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:353.584885,&quot;memory&quot;:428.88671875,&quot;cpuPercentage&quot;:4.521545844,&quot;memoryPercentage&quot;:1.5442258723},{&quot;in_avg_response_time&quot;:138.3364786879,&quot;in_throughput&quot;:46.2532054326,&quot;in_progress_requests&quot;:6.3985055676,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:353.584885,&quot;memory&quot;:428.88671875,&quot;cpuPercentage&quot;:4.521545844,&quot;memoryPercentage&quot;:1.5442258723},{&quot;in_avg_response_time&quot;:138.9242942287,&quot;in_throughput&quot;:45.7093984605,&quot;in_progress_requests&quot;:6.3501459207,&quot;http_error_count&quot;:0,&quot;ballerina_error_count&quot;:0,&quot;cpu&quot;:378.533754,&quot;memory&quot;:458.3984375,&quot;cpuPercentage&quot;:4.8405850895,&quot;memoryPercentage&quot;:1.6504841397}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">997</stringProp>
            <stringProp name="RandomTimer.range">20</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
